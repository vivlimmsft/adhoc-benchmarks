name: Run benchmarks (Windows)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: dotnet-benchmarks-scratch/dotnet-benchmarks-scratch.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Run benchmark
      run: dotnet run -c Release --project .\dotnet-benchmarks-scratch\dotnet-benchmarks-scratch.csproj

    - name: Create index.html
      # super crude
      run: ls .\BenchmarkDotNet.Artifacts\results\*.html | %{ $_.Name } | % {"<a href='$_'>$_</a>"} > .\BenchmarkDotNet.Artifacts\results\index.html

    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3.0.1
        path: .\BenchmarkDotNet.Artifacts\results # The folder the action should deploy.

  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
